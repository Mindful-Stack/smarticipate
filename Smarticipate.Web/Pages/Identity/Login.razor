@page "/Login"
@inject IAccountManagement Account
@inject NavigationManager Navigation

<PageTitle>Sign In</PageTitle>

<div class="login">
    <div class="loginContent">
        <h2 class="titleLogin">Sign In</h2>

        <EditForm class="form" Model="_credentials" OnValidSubmit="LoginUser">
            <div class="formField">
                <label for="">Username:</label>
                <InputText id="inputText" @bind-value="_credentials.Email"/>
            </div>

            <div class="formField">
                <label for="">Password:</label>
                <InputText id="inputText" @bind-value="_credentials.Password" type="password"/>
            </div>

            <button class="submitBtn" type="submit">Login</button>
        </EditForm>
    </div>
    @if (_isLoading)
    {
        <MudProgressLinear Color="Color.Dark" Indeterminate="true" Style="width: 14rem;"/>
    }
    @if (!string.IsNullOrEmpty(_message))
    {
        <p class="warning" style="color: var(--red)">@_message</p>
    }


</div>

@code {
    private LoginModel _credentials = new();
    private string? _message = "";
    private bool _isLoading;

    private async Task LoginUser()
    {
        _isLoading = true;
        var response = await Account.LoginAsync(_credentials.Email, _credentials.Password);
        if (response.Succeeded)
        {
            Console.WriteLine("Login successful!");
            _isLoading = false;
            Navigation.NavigateTo("/TeacherSession");
        }
        else
        {
            _message = "Wrong username or password";
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

}